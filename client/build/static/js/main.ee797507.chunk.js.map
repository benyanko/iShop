{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducer.js","reducers/cartReducer.js","reducers/userReducer.js","reducers/orderReducer.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","screens/HomeScreen.js","actions/productActions.js","actions/cartActions.js","screens/ProductScreen.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","screens/ShippingScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UsersListScreen.js","screens/OrderListScreen.js","screens/YuvalReadmeScreen.js","screens/BenReadme.js","screens/AboutScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_CLEAR_ITEMS","CART_SAVE_SHIPPING_ADDRESS","USER_LOGIN_REQUEST","USER_LOGIN_SECCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","cart","cartItems","item","existItem","find","x","map","filter","shippingAddress","userLogin","userInfo","userRegister","orderCreate","success","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","userList","users","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","document","location","href","Header","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","id","Nav","className","Link","NavDropdown","title","Item","name","onClick","isAdmin","Footer","Row","Col","Rating","value","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","HomeScreen","history","useEffect","a","axios","get","data","response","message","push","sm","md","lg","xl","addToCart","qty","getState","countInStock","setItem","stringify","ProductScreen","match","useState","setQty","params","Image","alt","fluid","ListGroup","description","Form","Control","onChange","e","target","Array","keys","Button","disabled","CartScreen","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","config","headers","post","login","Group","controlId","Label","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","Authorization","token","Table","striped","bordered","hover","responsive","createdAt","substring","totalPrice","isDelivered","deliveredAt","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","index","createOrder","OrderScreen","orderId","loadingDeliver","successDeliver","user","put","deliverOrder","UserListScreen","OrderListScreen","YuvalReadmeScreen","BenReadmeScreen","AboutScreen","App","path","component","exact","UsersListScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ee797507.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SECCESS = 'USER_LOGIN_SECCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import { createStore, combineReducers, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer} from \"./reducers/productReducer\";\nimport {cartReducer} from \"./reducers/cartReducer\"\nimport { userLoginReducer, userRegisterReducer, userListReducer } from \"./reducers/userReducer\";\nimport {\n    orderCreateReducer,\n    orderDetailsReducer,\n    orderPayReducer,\n    orderDeliverReducer,\n    orderListMyReducer,\n    orderListReducer,\n} from './reducers/orderReducer'\n\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderDeliver: orderDeliverReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer,\n    userList: userListReducer\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n    ? JSON.parse(localStorage.getItem('cartItems'))\n    : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n    ? JSON.parse(localStorage.getItem('userInfo'))\n    : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n    ? JSON.parse(localStorage.getItem('shippingAddress'))\n    : {}\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n    },\n    userLogin: { userInfo: userInfoFromStorage }\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store","import { PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL } from '../constants/productConstants'\n\nexport const productListReducer = (state = {products: []}, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return{ loading: true, products: []}\n        case PRODUCT_LIST_SUCCESS:\n            return { loading: false, products: action.payload }\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const productDetailsReducer = (state = {product: {}}, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return{ loading: true, ...state}\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload }\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}","import {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_CLEAR_ITEMS} from \"../constants/cartConstants\";\n\nexport const cartReducer = (\n    state = { cartItems: [] },\n    action\n) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n\n            const existItem = state.cartItems.find((x) => x.product === item.product)\n\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map((x) =>\n                        x.product === existItem.product ? item : x\n                    )\n                }\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\n            }\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload,\n            }\n        case CART_CLEAR_ITEMS:\n            return {\n                ...state,\n                cartItems: [],\n            }\n        default:\n            return state\n    }\n}","import { USER_LOGIN_REQUEST,\n    USER_LOGIN_SECCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET} from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return{ loading: true }\n        case USER_LOGIN_SECCESS:\n            return { loading: false, userInfo: action.payload }\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_LOGOUT:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_LOGOUT:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true }\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload }\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_LIST_RESET:\n            return { users: [] }\n        default:\n            return state\n    }\n}\n\n","import {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_RESET,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n    ORDER_LIST_FAIL,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_REQUEST,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_RESET,\n    ORDER_CREATE_RESET,\n} from '../constants/orderConstants'\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                loading: true,\n            }\n        case ORDER_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload,\n            }\n        case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        case ORDER_CREATE_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const orderDetailsReducer = (\n    state = { loading: true, orderItems: [], shippingAddress: {} },\n    action\n) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            }\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload,\n            }\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true,\n            }\n        case ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n            }\n        case ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        case ORDER_PAY_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return {\n                loading: true,\n            }\n        case ORDER_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n            }\n        case ORDER_DELIVER_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        case ORDER_DELIVER_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true,\n            }\n        case ORDER_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload,\n            }\n        case ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        case ORDER_LIST_MY_RESET:\n            return { orders: [] }\n        default:\n            return state\n    }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_REQUEST:\n            return {\n                loading: true,\n            }\n        case ORDER_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload,\n            }\n        case ORDER_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        default:\n            return state\n    }\n}\n","import {USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SECCESS,\n    USER_LOGOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL} from \"../constants/userConstants\";\nimport axios from \"axios\";\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users/login',\n            { email, password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SECCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    localStorage.removeItem('cartItems')\n    localStorage.removeItem('shippingAddress')\n    localStorage.removeItem('paymentMethod')\n    dispatch({ type: USER_LOGOUT })\n    document.location.href = '/login'\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST,\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n\n        const { data } = await axios.post(\n            '/api/users',\n            { name, email, password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data,\n        })\n\n        dispatch({\n            type: USER_LOGIN_SECCESS,\n            payload: data,\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(`/api/users`, config)\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: message,\n        })\n    }\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {LinkContainer} from 'react-router-bootstrap'\nimport {Navbar, Nav, Container, NavDropdown} from \"react-bootstrap\";\nimport { logout } from '../actions/userActions'\n\n\nconst Header = () => {\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            <Navbar bg='light' variant='light' expand='lg' collapseOnSelect>\n                <Container>\n                    <LinkContainer to={'/'}>\n                        <Navbar.Brand>iShop</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ms-auto\">\n                            {userInfo && (\n                            <LinkContainer to={'/cart'}>\n                                <Nav.Link>\n                                  <i className='fas fa-shopping-cart'></i> Cart\n                                </Nav.Link>\n                            </LinkContainer>)}\n                            {userInfo && (\n                            <LinkContainer to={'/about'}>\n                                <Nav.Link>\n                                    About\n                                </Nav.Link>\n                            </LinkContainer> )}\n                            <NavDropdown title='Readme' id='readme'>\n                                <LinkContainer to='/benreadme'>\n                                    <NavDropdown.Item>Ben Readme</NavDropdown.Item>\n                                </LinkContainer>\n                                <LinkContainer to='/yuvalreadme'>\n                                    <NavDropdown.Item>Yuval Readme</NavDropdown.Item>\n                                </LinkContainer>\n                            </NavDropdown>\n                            {userInfo ? (\n                                <NavDropdown  title={userInfo.name} id='username'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <NavDropdown.Item onClick={logoutHandler}>\n                                        Logout\n                                    </NavDropdown.Item>\n                                </NavDropdown>\n                            ) : (\n                                <LinkContainer to='/login'>\n                                    <Nav.Link>\n                                        <i className='fas fa-user'></i> Sign In\n                                    </Nav.Link>\n                                </LinkContainer>\n                            )}\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenu'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to='/admin/orderlist'>\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\n                                    </LinkContainer>\n                                </NavDropdown>\n                            )}\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header","import React from \"react\";\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n    return (\n            <footer>\n                <Container>\n                    <Row>\n                        <Col className='text-center py-3'>\n                            Copyright &copy; iShop\n                        </Col>\n                    </Row>\n                </Container>\n            </footer>\n    )\n}\n\nexport default Footer","import React from \"react\";\n\nconst Rating = ({value, text, color}) => {\n    return (\n        <div className={'rating'}>\n            <span>\n                <i style={{color}}\n                    className={\n                    value >= 1\n                        ? 'fas fa-star'\n                        : value >= 0.5\n                        ? 'fas fa-star-half-alt'\n                        : 'far fa-star'\n                }\n                >\n                </i>\n            </span>\n            <span>\n                <i style={{color}}\n                    className={\n                    value >= 2\n                        ? 'fas fa-star'\n                        : value >= 1.5\n                        ? 'fas fa-star-half-alt'\n                        : 'far fa-star'\n                }\n                >\n                </i>\n            </span>\n            <span>\n                <i style={{color}}\n                    className={\n                    value >= 3\n                        ? 'fas fa-star'\n                        : value >= 2.5\n                        ? 'fas fa-star-half-alt'\n                        : 'far fa-star'\n                }\n                >\n                </i>\n            </span>\n            <span>\n                <i style={{color}}\n                    className={\n                    value >= 4\n                        ? 'fas fa-star'\n                        : value >= 3.5\n                        ? 'fas fa-star-half-alt'\n                        : 'far fa-star'\n                }\n                >\n                </i>\n            </span>\n            <span>\n                <i style={{color}}\n                    className={\n                    value >= 5\n                        ? 'fas fa-star'\n                        : value >= 4.5\n                        ? 'fas fa-star-half-alt'\n                        : 'far fa-star'\n                }\n                >\n                </i>\n            </span>\n            <span>{text && text}</span>\n        </div>\n    )\n}\n\nRating.defaultProps = {\n    color: '#f8e825'\n}\nexport default Rating","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Card} from \"react-bootstrap\";\nimport Rating from \"./Rating\";\n\nconst Product = ({product}) => {\n    return (\n        <Card className='my-3 p-3 rounded'>\n            <Link to={`/product/${product._id}`}>\n                <Card.Img src={product.image} variant={'top'} />\n            </Link>\n            <Card.Body>\n                <Link to={`/product/${product._id}`}>\n                    <Card.Title as={'div'}><strong>{product.name}</strong></Card.Title>\n                </Link>\n            </Card.Body>\n            <Card.Text as={'div'}>\n                <Rating value={product.rating} text={`${product.numReviews} reviews`} />\n            </Card.Text>\n            <Card.Text as={'div'}>\n                ${product.price}\n            </Card.Text>\n        </Card>\n    )\n}\n\nexport default Product","import React from \"react\"\nimport { Spinner } from \"react-bootstrap\"\n\nconst Loader = () => {\n    return(\n        <Spinner animation={'border'} role={'status'} style={{\n            width: '100px',\n            height: '100px',\n            margin: 'auto',\n            display: 'block',\n        }}>\n        <span className={'sr-only'}>\n            Loading...\n        </span>\n        </Spinner>\n    )\n}\n\nexport default Loader","import React from \"react\"\nimport { Alert } from \"react-bootstrap\"\n\nconst Message = ({ variant, children }) => {\n    return(\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nMessage.defaultProps = {\n    variant: 'info'\n}\n\nexport default Message","import React, { useEffect } from \"react\"\nimport { useDispatch, useSelector} from \"react-redux\"\nimport {Row, Col} from \"react-bootstrap\"\nimport Product from \"../components/Product\"\nimport {listProducts} from \"../actions/productActions\"\nimport Loader from \"../components/Loader\"\nimport Message from \"../components/Message\"\nimport {listMyOrders} from \"../actions/orderActions\";\n\nconst HomeScreen = ({ location, history }) => {\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productList = useSelector(state => state.productList )\n    const {loading, error, products } = productList\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else{\n            dispatch(listProducts())        }\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <>\n          <h1>\n              Products\n          </h1>\n            {loading ?\n                (<Loader/>):\n                error ?\n                    (<Message variant={'danger'}>{error}</Message> )\n                    : (\n                <Row>\n                    {products.map((product) => (\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3} >\n                            <Product product={product} />\n                        </Col>\n                    ))}\n                </Row>\n            )}\n        </>\n    )\n}\n\nexport default HomeScreen","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL\n} from \"../constants/productConstants\";\nimport axios from \"axios\";\n\nexport const listProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get('/api/products')\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n\n}\n\nexport const listProductsDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n\n}","import axios from \"axios\"\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS } from \"../constants/cartConstants\"\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,\n    })\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\n\n","import React, { useState, useEffect } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {Row, Col, Image, ListGroup, Card, Button, ListGroupItem, Form} from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport { listProductsDetails } from \"../actions/productActions\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport {addToCart} from \"../actions/cartActions\";\n\nconst ProductScreen = ({ history, match }) => {\n    const [qty, setQty] = useState(1)\n\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productDetails = useSelector(state => state.productDetails)\n    const {loading, error, product } = productDetails\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else{\n            dispatch(listProductsDetails(match.params.id))\n        }\n    }, [dispatch, history, userInfo, match])\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n    return (\n        <>\n            <Link className={'btn btn-light my-3'} to={'/'}>\n                Go Back\n            </Link>\n            {loading ?\n                (<Loader/>):\n                error ?\n                    (<Message variant={'danger'}>{error}</Message> )\n                    : (\n                        <Row>\n                            <Col md={6}>\n                                <Image src={product.image} alt={product.name} fluid />\n                            </Col>\n                            <Col md={3}>\n                                <ListGroup variant={'flush'}>\n                                    <ListGroup.Item>\n                                        <h3>{product.name}</h3>\n                                    </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        <Rating value={product.rating} text={`${product.numReviews} reviews`} />\n                                    </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        Price: ${product.price}\n                                    </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        Description: ${product.description}\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Col>\n                            <Col md={3}>\n                                <Card>\n                                    <ListGroup variant={'flush'}>\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col>\n                                                    Price:\n                                                </Col>\n                                                <Col>\n                                                    <strong>\n                                                        ${product.price}\n                                                    </strong>\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col>\n                                                    Status:\n                                                </Col>\n                                                <Col>\n                                                    <strong>\n                                                        {product.countInStock > 0 ? 'In Stock': 'Out Of Stock'}\n                                                    </strong>\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n\n                                        {product.countInStock > 0 && (\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Qty</Col>\n                                                    <Col>\n                                                        <Form.Control as={'select'}\n                                                                      value={qty}\n                                                                      onChange={(e) =>\n                                                                      setQty(e.target.value)}>\n                                                            {[...Array(product.countInStock).keys()].map((x) => (\n                                                                <option key={x + 1} value={x + 1}>\n                                                                    {x + 1}\n                                                                </option>\n                                                            ))}\n                                                            </Form.Control>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        )}\n\n                                        <ListGroup.Item>\n                                            <Button\n                                                onClick={addToCartHandler}\n                                                className={'btn-block'}\n                                                type={'button'}\n                                                disabled={product.countInStock === 0}>\n                                                Add To Cart\n                                            </Button>\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Card>\n                            </Col>\n                        </Row>\n\n                    )}\n\n        </>\n    )\n}\n\nexport default ProductScreen","import React, { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Message from \"../components/Message\"\nimport {Link} from \"react-router-dom\";\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from \"react-bootstrap\";\nimport {addToCart, removeFromCart} from \"../actions/cartActions\";\nimport {listProducts} from \"../actions/productActions\";\n\nconst CartScreen = ({ match, location, history }) => {\n    const productId = match.params.id\n\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    const cart = useSelector((state) => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else{\n            if (productId) {\n            dispatch(addToCart(productId, qty))\n            }\n        }\n    }, [dispatch, history, userInfo, qty, productId])\n\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return(\n        <Row>\n            <Col md={9}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? <Message>Your cart is empty\n                <Link to={'/'}> Go Back</Link>\n                </Message> : (<ListGroup variant='flush'>\n                        {cartItems.map(item => (\n                            <ListGroup.Item key={item.product}>\n                                <Row>\n                                    <Col md={2}>\n                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                    </Col>\n                                    <Col md={3}>\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                    </Col>\n                                    <Col md={2}>\n                                        ${item.price}\n                                    </Col>\n                                    <Col md={2}>\n                                        <Form.Control as={'select'}\n                                                      value={item.qty}\n                                                      onChange={(e) =>\n                                                          dispatch(addToCart(item.product, Number(e.target.value)))}>\n                                            {[...Array(item.countInStock).keys()].map((x) => (\n                                                <option key={x + 1} value={x + 1}>\n                                                    {x + 1}\n                                                </option>\n                                            ))}\n                                        </Form.Control>\n                                    </Col>\n                                    <Col md={2}>\n                                        <Button type={'button'} variant={'light'} onClick={() => removeFromCartHandler(item.product)}>\n                                            <i className={'fas fa-trash'}></i>\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                    )}\n            </Col>\n            <Col md={3}>\n                <Card>\n                    <ListGroup variant={\"flush\"}>\n                        <ListGroup.Item>\n                            <h2>\n                                Subtotal {cartItems.reduce((acc, item) =>   acc + item.qty, 0)} items\n                            </h2>\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Button type={\"button\"} className={'btn-block'} disabled={cartItems.length === 0}\n                                    onClick={checkoutHandler}>Checkout</Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\nexport default CartScreen","import React from \"react\"\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nconst LoginScreen = ({ location, history }) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { loading, error, userInfo } = userLogin\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New Customer?{' '}\n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                        Register\n                    </Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userRegister = useSelector((state) => state.userRegister)\n    const { loading, error, userInfo } = userRegister\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign Up</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='confirmPassword'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Confirm password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account?{' '}\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Login\n                    </Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listMyOrders } from '../actions/orderActions'\n\nconst ProfileScreen = ({ location, history }) => {\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    const orderListMy = useSelector((state) => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else{\n            dispatch(listMyOrders())\n            }\n    }, [dispatch, history, userInfo])\n\n    return (\n        <Row>\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                    <Table striped bordered hover responsive className='table-sm'>\n                        <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>DATE</th>\n                            <th>TOTAL</th>\n                            <th>DELIVERED</th>\n                            <th></th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {orders.map((order) => (\n                            <tr key={order._id}>\n                                <td>{order._id}</td>\n                                <td>{order.createdAt.substring(0, 10)}</td>\n                                <td>{order.totalPrice}</td>\n                                <td>\n                                    {order.isDelivered ? (\n                                        order.deliveredAt.substring(0, 10)\n                                    ) : (\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                    )}\n                                </td>\n                                <td>\n                                    <LinkContainer to={`/order/${order._id}`}>\n                                        <Button className='btn-sm' variant='light'>\n                                            Details\n                                        </Button>\n                                    </LinkContainer>\n                                </td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </Table>\n                )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen","import axios from 'axios'\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_DETAILS_FAIL,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_REQUEST,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_FAIL,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_REQUEST,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_REQUEST,\n} from '../constants/orderConstants'\nimport { logout } from './userActions'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.post(`/api/orders`, order, config)\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data,\n        })\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data,\n        })\n        localStorage.removeItem('cartItems')\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: message,\n        })\n    }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(`/api/orders/${id}`, config)\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: message,\n        })\n    }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: message,\n        })\n    }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(`/api/orders/myorders`, config)\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: message,\n        })\n    }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(`/api/orders`, config)\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: message,\n        })\n    }\n}\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport { saveShippingAddress } from '../actions/cartActions'\nimport { createOrder } from '../actions/orderActions'\n\nconst ShippingScreen = ({ history }) => {\n    const cart = useSelector((state) => state.cart)\n    const { shippingAddress } = cart\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter address'\n                        value={address}\n                        required\n                        onChange={(e) => setAddress(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter city'\n                        value={city}\n                        required\n                        onChange={(e) => setCity(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode}\n                        required\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter country'\n                        value={country}\n                        required\n                        onChange={(e) => setCountry(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nconst PlaceOrderScreen = ({ history }) => {\n    const dispatch = useDispatch()\n\n    const cart = useSelector((state) => state.cart)\n\n    if (!cart.shippingAddress.address) {\n        history.push('/shipping')\n    }\n    //   Calculate prices\n    const addDecimals = (num) => {\n        return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    cart.itemsPrice = addDecimals(\n        cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n    cart.totalPrice = (\n        Number(cart.itemsPrice) +\n        Number(cart.shippingPrice)\n    ).toFixed(2)\n\n    const orderCreate = useSelector((state) => state.orderCreate)\n    const { order, success, error } = orderCreate\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n        // eslint-disable-next-line\n    }, [history, success])\n\n    const placeOrderHandler = () => {\n        dispatch(\n            createOrder({\n                orderItems: cart.cartItems,\n                shippingAddress: cart.shippingAddress,\n                itemsPrice: cart.itemsPrice,\n                shippingPrice: cart.shippingPrice,\n                totalPrice: cart.totalPrice,\n            })\n        )\n    }\n\n    return (\n        <>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p>\n                                <strong>Address:</strong>\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\n                                {cart.shippingAddress.postalCode},{' '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? (\n                                <Message>Your cart is empty</Message>\n                            ) : (\n                                <ListGroup variant='flush'>\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image\n                                                        src={item.image}\n                                                        alt={item.name}\n                                                        fluid\n                                                        rounded\n                                                    />\n                                                </Col>\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>\n                                                        {item.name}\n                                                    </Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrderHandler}\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default PlaceOrderScreen","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {\n    getOrderDetails,\n    deliverOrder,\n} from '../actions/orderActions'\nimport {\n    ORDER_PAY_RESET,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nconst OrderScreen = ({ match, history }) => {\n    const orderId = match.params.id\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const orderDetails = useSelector((state) => state.orderDetails)\n    const { order, loading, error } = orderDetails\n\n    const orderDeliver = useSelector((state) => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    if (!loading) {\n        const addDecimals = (num) => {\n            return (Math.round(num * 100) / 100).toFixed(2)\n        }\n\n        order.itemsPrice = addDecimals(\n            order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n        )\n    }\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n\n        if (!order || successDeliver || order._id !== orderId) {\n            dispatch({type: ORDER_DELIVER_RESET})\n            dispatch(getOrderDetails(orderId))\n        }\n    }, [dispatch, orderId, successDeliver, order])\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n        <>\n            <h1>Order {order._id}</h1>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p>\n                                <strong>Name: </strong> {order.user.name}\n                            </p>\n                            <p>\n                                <strong>Email: </strong>{' '}\n                                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n                            </p>\n                            <p>\n                                <strong>Address:</strong>\n                                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\n                                {order.shippingAddress.postalCode},{' '}\n                                {order.shippingAddress.country}\n                            </p>\n                            {order.isDelivered ? (\n                                <Message variant='success'>\n                                    Delivered on {order.deliveredAt}\n                                </Message>\n                            ) : (\n                                <Message variant='danger'>Not Delivered</Message>\n                            )}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {order.orderItems.length === 0 ? (\n                                <Message>Order is empty</Message>\n                            ) : (\n                                <ListGroup variant='flush'>\n                                    {order.orderItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image\n                                                        src={item.image}\n                                                        alt={item.name}\n                                                        fluid\n                                                        rounded\n                                                    />\n                                                </Col>\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>\n                                                        {item.name}\n                                                    </Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>${order.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>${order.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>${order.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            {loadingDeliver && <Loader />}\n                            {userInfo &&\n                            userInfo.isAdmin &&\n                            !order.isDelivered && (\n                                <ListGroup.Item>\n                                    <Button\n                                        type='button'\n                                        className='btn btn-block'\n                                        onClick={deliverHandler}\n                                    >\n                                        Mark As Delivered\n                                    </Button>\n                                </ListGroup.Item>\n                            )}\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default OrderScreen","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers } from '../actions/userActions'\n\nconst UserListScreen = ({ history }) => {\n    const dispatch = useDispatch()\n\n    const userList = useSelector((state) => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n    }, [dispatch, history, userInfo])\n\n    return (\n        <>\n            <h1>Users</h1>\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant='danger'>{error}</Message>\n            ) : (\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>NAME</th>\n                        <th>EMAIL</th>\n                        <th>ADMIN</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {users.map((user) => (\n                        <tr key={user._id}>\n                            <td>{user._id}</td>\n                            <td>{user.name}</td>\n                            <td>\n                                <a href={`mailto:${user.email}`}>{user.email}</a>\n                            </td>\n                            <td>\n                                {user.isAdmin ? (\n                                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                ) : (\n                                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                )}\n                            </td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </Table>\n            )}\n        </>\n    )\n}\n\nexport default UserListScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders } from '../actions/orderActions'\n\nconst OrderListScreen = ({ history }) => {\n    const dispatch = useDispatch()\n\n    const orderList = useSelector((state) => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n    }, [dispatch, history, userInfo])\n\n    return (\n        <>\n            <h1>Orders</h1>\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant='danger'>{error}</Message>\n            ) : (\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>USER</th>\n                        <th>DATE</th>\n                        <th>TOTAL</th>\n                        <th>DELIVERED</th>\n                        <th></th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {orders.map((order) => (\n                        <tr key={order._id}>\n                            <td>{order._id}</td>\n                            <td>{order.user && order.user.name}</td>\n                            <td>{order.createdAt.substring(0, 10)}</td>\n                            <td>${order.totalPrice}</td>\n                            <td>\n                                {order.isDelivered ? (\n                                    order.deliveredAt.substring(0, 10)\n                                ) : (\n                                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                )}\n                            </td>\n                            <td>\n                                <LinkContainer to={`/order/${order._id}`}>\n                                    <Button variant='light' className='btn-sm'>\n                                        Details\n                                    </Button>\n                                </LinkContainer>\n                            </td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </Table>\n            )}\n        </>\n    )\n}\n\nexport default OrderListScreen\n","import React from \"react\"\n\nconst YuvalReadmeScreen = () => {\n\n    return (\n        <>\n            <h1>\n                Latest Products\n            </h1>\n                <h3>Store Name</h3>\n            <p>iShop</p>\n            <p>&nbsp;</p>\n                <h4>What are you selling</h4>\n            <p>We sell Apple Products- Iphone, Ipad, Airpods, Macbook etc...</p>\n            <p>&nbsp;</p>\n                <h4>What additional page(s) did you add?</h4>\n            <p>-&nbsp;User Profile Screen: Show&nbsp;orders history and track orders.&nbsp;</p>\n            <p>- Admin Orders Screen: Display all the orders of the store.</p>\n            <p>- Order Screen: Display order's details for a user, mark as delieverd functionality for Admin.</p>\n            <p>- About Page: Which tells our story and why we started sell Apple products.</p>\n            <p>&nbsp;</p>\n                <h4>How to operate the additional pages?</h4>\n            <p>-&nbsp;User Profile Screen: After user login, his name will display on the menu, by clicking the name profile button will be displayed.</p>\n            <p>- Admin Orders Screen: After admin login, an admin button will display on the menu. By clicking the button will be display Order Button.</p>\n            <p>- Order Screen: After user/admin login, can access order by clicking the&nbsp;desired order in the order list, for admin will display \"mark as delievered button\"</p>\n            <p>- About Page: button at menu&nbsp;page which each button will take you to the relevant page</p>\n            <p>&nbsp;</p>\n                <h4>What was hard to do?</h4>\n            <p>The part that was hard for me was working with the database. Until this project all my knowledge about Data was only in theory and this is actually the first time I used Data with my project.</p>\n            <p>It was challenging for me to understand how to work with Data on a practical level but I finally learned a lot of tools which I am sure will help me along the way</p>\n            <p>&nbsp;</p>\n                <h4>Who is your partner?</h4>\n            <p>Ben Yankovich - 316491323</p>\n            <p>&nbsp;</p>\n                <h4>What did you do?</h4>\n            <p>- Products logic: Build the product model(the properties of each product), controllers and routes.</p>\n            <p>- Create database for the products of our store and connect it to the project.&nbsp;</p>\n            <p>-Additional pages: Build the additional pages: User Profile Screen, Admin Orders Screen, Order Screen and About page.</p>\n            <p>-UI: Design pages. &nbsp;</p>\n            <p>&nbsp;</p>\n                <h4>What did your partner do?</h4>\n            <p>-Planning and design the store architecture: Plan how the should look like, the connection between models and more.</p>\n            <p>- User login authentication: Create hierarchy between user and admin with differnet permissions.&nbsp;</p>\n            <p>- Implement Redux in our project: User login, Cart, Order and more.</p>\n            <p>-UI: Design pages. &nbsp;</p>\n            <p>&nbsp;</p>\n                <h4>Specify all the different routes your app supports</h4>\n            <pre><br />route   GET /api/orders/:id<br />desc    Get order by ID<br />access  Private</pre>\n            <pre>route   GET /api/orders/:id/deliver<br />desc    Update order to delivered<br />access  Private/Admin</pre>\n            <pre>route   GET /api/orders/myorders<br />desc    Get logged in user orders<br />access  Private</pre>\n            <pre>route   GET /api/orders<br />desc    Get all orders<br />access  Private/Admin</pre>\n            <pre>route   POST /api/orders<br />desc    Create new order<br />access  Private</pre>\n            <pre>router  GET api/products<br />desc    Get all products<br />access  Public</pre>\n            <pre>router  GET api/products/:id<br />desc    Get single product<br />access  Public</pre>\n            <pre>router  GET api/users/profile<br />desc    Get user profile<br />access  Private</pre>\n            <pre>desc    Get all users<br />route   GET /api/users<br />access  Private/Admin</pre>\n            <pre>router  POST api/users/login<br />desc    Auth user &amp; get token<br />access  Public</pre>\n            <pre>router  POST api/users<br />desc    Register new user<br />access  Public</pre>\n            <pre>&nbsp;</pre>\n        </>\n    )\n}\n\nexport default YuvalReadmeScreen","import React from \"react\"\n\nconst BenReadmeScreen = () => {\n\n    return (\n        <>\n            <h1>\n                Latest Products\n            </h1>\n            <h3>Store Name</h3>\n            <p>iShop</p>\n            <p>&nbsp;</p>\n            <h4>What are you selling</h4>\n            <p>We sell Apple Products- Iphone, Ipad, Airpods, Macbook etc...</p>\n            <p>&nbsp;</p>\n            <h4>What additional page(s) did you add?</h4>\n            <p>-&nbsp;User Profile Screen: Show&nbsp;orders history and track orders.&nbsp;</p>\n            <p>- Admin Orders Screen: Display all the orders of the store.</p>\n            <p>- Order Screen: Display order's details for a user, mark as delieverd functionality for Admin.</p>\n            <p>- About Page: Which tells our story and why we started sell Apple products.</p>\n            <p>&nbsp;</p>\n            <h4>How to operate the additional pages?</h4>\n            <p>-&nbsp;User Profile Screen: After user login, his name will display on the menu, by clicking the name profile button will be displayed.</p>\n            <p>- Admin Orders Screen: After admin login, an admin button will display on the menu. By clicking the button will be display Order Button.</p>\n            <p>- Order Screen: After user/admin login, can access order by clicking the&nbsp;desired order in the order list, for admin will display \"mark as delievered button\"</p>\n            <p>- About Page: button at menu&nbsp;page which each button will take you to the relevant page</p>\n            <p>&nbsp;</p>\n            <h4>What was hard to do?</h4>\n            <p>For me the section of using Redux for state management (cart, user auteniction ) in the project was hard. During the degree I had an experience of backend projects, and this is my first time I had to understand how to work with the fronted side.</p>\n            <p>It was a challenge for me but after I read articles about this subject, I succeeded to understand how to combine this in our project.</p>\n            <p>&nbsp;</p>\n            <h4>Who is your partner?</h4>\n            <p>Yuval Afel - 207544172</p>\n            <p>&nbsp;</p>\n            <h4>What did you do?</h4>\n            <p>-Planning and design the store architecture: Plan how the should look like, the connection between models and more.</p>\n            <p>- User login authentication: Create hierarchy between user and admin with differnet permissions.&nbsp;</p>\n            <p>- Implement Redux in our project: User login, Cart, Order and more.</p>\n            <p>- Order management logic.</p>\n            <p>-UI: Design pages. &nbsp;</p>\n            <p>&nbsp;</p>\n            <h4>What did your partner do?</h4>\n            <p>- Products logic: Build the product model(the properties of each product), controllers and routes.</p>\n            <p>- Create database for the products of our store and connect it to the project.&nbsp;</p>\n            <p>-Additional pages: Build the additional pages: User Profile Screen, Admin Orders Screen, Order Screen and About page.</p>\n            <p>-UI: Design pages. &nbsp;</p>\n            <p>&nbsp;</p>\n            <h4>Specify all the different routes your app supports</h4>\n            <pre><br />route   GET /api/orders/:id<br />desc    Get order by ID<br />access  Private</pre>\n            <pre>route   GET /api/orders/:id/deliver<br />desc    Update order to delivered<br />access  Private/Admin</pre>\n            <pre>route   GET /api/orders/myorders<br />desc    Get logged in user orders<br />access  Private</pre>\n            <pre>route   GET /api/orders<br />desc    Get all orders<br />access  Private/Admin</pre>\n            <pre>route   POST /api/orders<br />desc    Create new order<br />access  Private</pre>\n            <pre>router  GET api/products<br />desc    Get all products<br />access  Public</pre>\n            <pre>router  GET api/products/:id<br />desc    Get single product<br />access  Public</pre>\n            <pre>router  GET api/users/profile<br />desc    Get user profile<br />access  Private</pre>\n            <pre>desc    Get all users<br />route   GET /api/users<br />access  Private/Admin</pre>\n            <pre>router  POST api/users/login<br />desc    Auth user &amp; get token<br />access  Public</pre>\n            <pre>router  POST api/users<br />desc    Register new user<br />access  Public</pre>\n            <pre>&nbsp;</pre>\n        </>\n    )\n}\n\nexport default BenReadmeScreen","import React, {useEffect} from \"react\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {listProducts} from \"../actions/productActions\";\n\nconst AboutScreen = ({ location, history }) => {\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        }\n    }, [dispatch, history, userInfo])\n\n    return (\n        <>\n            <h1>\n                About Us\n            </h1>\n            <p>We are Ben Yankovich and Yuval Apel and we live in Herzliya.&nbsp;</p>\n            <p>We became best friends 15 years ago because we played basketball together.</p>\n            <p>Our store&nbsp;started sell Apple's products since we were 18 years old.&nbsp;</p>\n            <p>We believe that Apple company is the best company in the word and that's reason we decided to sell only Apple's products.</p>\n            <p>The store is located in Sokolov street Herzliya, and in addition we sell products online.&nbsp;</p>\n            <p>>You are welcome to visit our site or come to see our store.&nbsp;</p>\n            <p>Hope you will find whatever you need :)</p>\n        </>\n    )\n}\n\nexport default AboutScreen","import React from 'react'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport { Container } from 'react-bootstrap'\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from \"./screens/OrderScreen\";\nimport UsersListScreen from \"./screens/UsersListScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\nimport YuvalReadmeScreen from \"./screens/YuvalReadmeScreen\";\nimport BenReadmeScreen from \"./screens/BenReadme\";\nimport AboutScreen from \"./screens/AboutScreen\";\n\nconst App = () => {\n  return (\n      <Router>\n          <Header />\n          <main className='py-3'>\n              <Container>\n                  <Route path={'/'} component={HomeScreen} exact />\n                  <Route path={'/login'} component={LoginScreen} exact />\n                  <Route path='/register' component={RegisterScreen} />\n                  <Route path='/about' component={AboutScreen} />\n                  <Route path='/yuvalreadme' component={YuvalReadmeScreen} />\n                  <Route path='/benreadme' component={BenReadmeScreen} />\n                  <Route path='/profile' component={ProfileScreen} />\n                  <Route path='/shipping' component={ShippingScreen} />\n                  <Route path='/placeorder' component={PlaceOrderScreen} />\n                  <Route path='/admin/userlist' component={UsersListScreen} />\n                  <Route path='/admin/orderlist' component={OrderListScreen} />\n                  <Route path='/order/:id' component={OrderScreen} />\n                  <Route path={'/product/:id'} component={ProductScreen} />\n                  <Route path={'/cart/:id?'} component={CartScreen} />\n\n              </Container>\n          </main>\n          <Footer />\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}